17:47:19 | Bot Restart_Telegram launched.
Updates were skipped successfully.
TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:48:34 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:49:28 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:50:40 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:51:12 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:53:54 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:54:16 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:54:41 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:55:19 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:55:43 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:56:13 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:56:24 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:57:08 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:57:54 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:58:10 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
17:59:18 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
18:00:06 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
18:00:28 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

Recursive use of cursors not allowed.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 23, in get_post
    if not bd.message_id_exists(username, message_id):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 25, in message_id_exists
    result = self.cursor.execute("SELECT * FROM DataBase WHERE username=? AND message_id=?",
sqlite3.ProgrammingError: Recursive use of cursors not allowed.
Recursive use of cursors not allowed.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 31, in get_post
    client.send_message(bd.get_moder(), last_id)
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 123, in get_moder
    result = self.cursor.execute("SELECT moder FROM config").fetchall()
sqlite3.ProgrammingError: Recursive use of cursors not allowed.
Recursive use of cursors not allowed.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 23, in get_post
    if not bd.message_id_exists(username, message_id):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 25, in message_id_exists
    result = self.cursor.execute("SELECT * FROM DataBase WHERE username=? AND message_id=?",
sqlite3.ProgrammingError: Recursive use of cursors not allowed.
cannot rollback - no transaction is active
Traceback (most recent call last):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 25, in message_id_exists
    result = self.cursor.execute("SELECT * FROM DataBase WHERE username=? AND message_id=?",
sqlite3.ProgrammingError: Recursive use of cursors not allowed.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 23, in get_post
    if not bd.message_id_exists(username, message_id):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 24, in message_id_exists
    with self.connection:
sqlite3.OperationalError: cannot rollback - no transaction is active
cannot rollback - no transaction is active
Traceback (most recent call last):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 25, in message_id_exists
    result = self.cursor.execute("SELECT * FROM DataBase WHERE username=? AND message_id=?",
sqlite3.ProgrammingError: Recursive use of cursors not allowed.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 23, in get_post
    if not bd.message_id_exists(username, message_id):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 24, in message_id_exists
    with self.connection:
sqlite3.OperationalError: cannot rollback - no transaction is active
Cursor needed to be reset because of commit/rollback and can no longer be fetched from.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 30, in get_post
    message.forward(bd.get_moder())
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 123, in get_moder
    result = self.cursor.execute("SELECT moder FROM config").fetchall()
sqlite3.InterfaceError: Cursor needed to be reset because of commit/rollback and can no longer be fetched from.
Recursive use of cursors not allowed.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 26, in get_post
    for a in bd.get_last_rowid():
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 37, in get_last_rowid
    return self.cursor.execute("SELECT ROWID, * FROM DataBase LIMIT 1 OFFSET (SELECT COUNT(*) FROM DataBase)-1")
sqlite3.ProgrammingError: Recursive use of cursors not allowed.
Recursive use of cursors not allowed.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 23, in get_post
    if not bd.message_id_exists(username, message_id):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 25, in message_id_exists
    result = self.cursor.execute("SELECT * FROM DataBase WHERE username=? AND message_id=?",
sqlite3.ProgrammingError: Recursive use of cursors not allowed.
Recursive use of cursors not allowed.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 30, in get_post
    message.forward(bd.get_moder())
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 123, in get_moder
    result = self.cursor.execute("SELECT moder FROM config").fetchall()
sqlite3.ProgrammingError: Recursive use of cursors not allowed.
[bot_python] Sleeping for 2s (required by "messages.ForwardMessages")
cannot rollback - no transaction is active
Traceback (most recent call last):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 25, in message_id_exists
    result = self.cursor.execute("SELECT * FROM DataBase WHERE username=? AND message_id=?",
sqlite3.ProgrammingError: Recursive use of cursors not allowed.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 23, in get_post
    if not bd.message_id_exists(username, message_id):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 24, in message_id_exists
    with self.connection:
sqlite3.OperationalError: cannot rollback - no transaction is active
Recursive use of cursors not allowed.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 23, in get_post
    if not bd.message_id_exists(username, message_id):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 26, in message_id_exists
    (username, message_id,)).fetchall()
sqlite3.ProgrammingError: Recursive use of cursors not allowed.
Recursive use of cursors not allowed.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 31, in get_post
    client.send_message(bd.get_moder(), last_id)
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 123, in get_moder
    result = self.cursor.execute("SELECT moder FROM config").fetchall()
sqlite3.ProgrammingError: Recursive use of cursors not allowed.
Recursive use of cursors not allowed.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 23, in get_post
    if not bd.message_id_exists(username, message_id):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 25, in message_id_exists
    result = self.cursor.execute("SELECT * FROM DataBase WHERE username=? AND message_id=?",
sqlite3.ProgrammingError: Recursive use of cursors not allowed.
21:34:49 | Bot Restart_Telegram launched.
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Updates were skipped successfully.
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
21:40:25 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
21:42:06 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Recursive use of cursors not allowed.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/pyrogram/dispatcher.py", line 219, in handler_worker
    await self.loop.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/home/evgenji/Desktop/telegram-grabber/restart_bot/../python_bot/bot_grabber.py", line 23, in get_post
    if not bd.message_id_exists(username, message_id):
  File "/home/evgenji/Desktop/telegram-grabber/sql/sql.py", line 25, in message_id_exists
    result = self.cursor.execute("SELECT * FROM DataBase WHERE username=? AND message_id=?",
sqlite3.ProgrammingError: Recursive use of cursors not allowed.
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
21:45:51 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 986, in _wrap_create_connection
    return await self._loop.create_connection(*args, **kwargs)  # type: ignore[return-value]  # noqa
  File "/usr/lib/python3.10/asyncio/base_events.py", line 1064, in create_connection
    raise exceptions[0]
  File "/usr/lib/python3.10/asyncio/base_events.py", line 1049, in create_connection
    sock = await self._connect_sock(
  File "/usr/lib/python3.10/asyncio/base_events.py", line 960, in _connect_sock
    await self.sock_connect(sock, address)
  File "/usr/lib/python3.10/asyncio/selector_events.py", line 499, in sock_connect
    return await fut
  File "/usr/lib/python3.10/asyncio/selector_events.py", line 504, in _sock_connect
    sock.connect(address)
OSError: [Errno 101] Network is unreachable

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 139, in make_request
    async with session.post(url, data=req, **kwargs) as response:
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/client.py", line 1138, in __aenter__
    self._resp = await self._coro
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/client.py", line 535, in _request
    conn = await self._connector.connect(
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 542, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 907, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 1206, in _create_direct_connection
    raise last_exc
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 1175, in _create_direct_connection
    transp, proto = await self._wrap_create_connection(
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 992, in _wrap_create_connection
    raise client_error(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [Network is unreachable]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 142, in make_request
    raise exceptions.NetworkError(f"aiohttp client throws an error: {e.__class__.__name__}: {e}")
aiogram.utils.exceptions.NetworkError: Aiohttp client throws an error: ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [Network is unreachable]
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
21:48:47 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates21:52:20 | Bot Restart_Telegram launched.
Updates were skipped successfully.
TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
21:52:38 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
21:53:18 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
21:53:41 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
21:54:33 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

TgCrypto is missing! Pyrogram will work the same, but at a much slower speed. More info: https://docs.pyrogram.org/topics/tgcrypto
21:56:02 | Bot Telegram-Grabber launched.
Pyrogram v1.2.20, Copyright (C) 2017-2021 Dan <https://github.com/delivrance>
Licensed under the terms of the GNU Lesser General Public License v3 or later (LGPLv3+)

22:50:36 | Bot Restart_Telegram launched.
Updates were skipped successfully.
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 139, in make_request
    async with session.post(url, data=req, **kwargs) as response:
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/client.py", line 1138, in __aenter__
    self._resp = await self._coro
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/client.py", line 559, in _request
    await resp.start(conn)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/client_reqrep.py", line 898, in start
    message, payload = await protocol.read()  # type: ignore[union-attr]
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/streams.py", line 616, in read
    await self._waiter
aiohttp.client_exceptions.ClientOSError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 142, in make_request
    raise exceptions.NetworkError(f"aiohttp client throws an error: {e.__class__.__name__}: {e}")
aiogram.utils.exceptions.NetworkError: Aiohttp client throws an error: ClientOSError: [Errno 104] Connection reset by peer
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 1154, in _create_direct_connection
    hosts = await asyncio.shield(host_resolved)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 880, in _resolve_host
    addrs = await self._resolver.resolve(host, port, family=self._family)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/resolver.py", line 33, in resolve
    infos = await self._loop.getaddrinfo(
  File "/usr/lib/python3.10/asyncio/base_events.py", line 860, in getaddrinfo
    return await self.run_in_executor(
  File "/usr/lib/python3.10/concurrent/futures/thread.py", line 58, in run
    result = self.fn(*self.args, **self.kwargs)
  File "/usr/lib/python3.10/socket.py", line 955, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -3] Temporary failure in name resolution

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 139, in make_request
    async with session.post(url, data=req, **kwargs) as response:
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/client.py", line 1138, in __aenter__
    self._resp = await self._coro
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/client.py", line 535, in _request
    conn = await self._connector.connect(
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 542, in connect
    proto = await self._create_connection(req, traces, timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 907, in _create_connection
    _, proto = await self._create_direct_connection(req, traces, timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiohttp/connector.py", line 1166, in _create_direct_connection
    raise ClientConnectorError(req.connection_key, exc) from exc
aiohttp.client_exceptions.ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [Temporary failure in name resolution]

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 142, in make_request
    raise exceptions.NetworkError(f"aiohttp client throws an error: {e.__class__.__name__}: {e}")
aiogram.utils.exceptions.NetworkError: Aiohttp client throws an error: ClientConnectorError: Cannot connect to host api.telegram.org:443 ssl:default [Temporary failure in name resolution]
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
Cause exception while getting updates.
Traceback (most recent call last):
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/dispatcher/dispatcher.py", line 380, in start_polling
    updates = await self.bot.get_updates(limit=limit, offset=offset, timeout=timeout)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/bot.py", line 97, in get_updates
    result = await self.request(api.Methods.GET_UPDATES, payload)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/base.py", line 208, in request
    return await api.make_request(self.session, self.server, self.__token, method, data, files,
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 140, in make_request
    return check_result(method, response.content_type, response.status, await response.text())
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/bot/api.py", line 119, in check_result
    exceptions.ConflictError.detect(description)
  File "/home/evgenji/.local/lib/python3.10/site-packages/aiogram/utils/exceptions.py", line 140, in detect
    raise err(cls.text or description)
aiogram.utils.exceptions.TerminatedByOtherGetUpdates: Terminated by other getupdates request; make sure that only one bot instance is running
00:06:55 | Bot Restart_Telegram launched.
Updates were skipped successfully.
